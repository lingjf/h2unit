CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

PROJECT(h2_test)

ADD_SUBDIRECTORY(libs)

SET(CMAKE_CXX_STANDARD 11)

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG .)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG .)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG .)

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE .)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE .)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE .)

IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE Debug)
ENDIF()

MESSAGE("Build Type is " ${CMAKE_BUILD_TYPE})

IF(CMAKE_BUILD_TYPE MATCHES "Release") 
    IF(CMAKE_CXX_COMPILER_ID MATCHES "MSVC") # Disable Optimization
        ADD_COMPILE_OPTIONS(/Od)
    ELSE()
        ADD_COMPILE_OPTIONS(-g -O0)
    ENDIF()
ENDIF()

IF(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
    ADD_COMPILE_OPTIONS(-bigobj)
    ADD_COMPILE_OPTIONS(/wd4018)
    ADD_COMPILE_OPTIONS(/wd4100)
    ADD_COMPILE_OPTIONS(/wd4101) #unreferenced local variable
    ADD_COMPILE_OPTIONS(/wd4127)
    ADD_COMPILE_OPTIONS(/wd4189)
    ADD_COMPILE_OPTIONS(/wd4267)
    ADD_COMPILE_OPTIONS(/wd4244)
    ADD_COMPILE_OPTIONS(/wd4305) #type cast
    ADD_COMPILE_OPTIONS(/wd4312) #type cast
    ADD_COMPILE_OPTIONS(/wd4324)
    ADD_COMPILE_OPTIONS(/wd4504)
    ADD_COMPILE_OPTIONS(/wd4505)
    ADD_COMPILE_OPTIONS(/wd4566) #character set
    ADD_COMPILE_OPTIONS(/wd4700)
    ADD_COMPILE_OPTIONS(/wd4706)
    ADD_COMPILE_OPTIONS(/wd4804)
    ADD_COMPILE_OPTIONS(/wd4805)
    ADD_COMPILE_OPTIONS(/wd4819)
    ADD_COMPILE_OPTIONS(/wd4834)
    ADD_COMPILE_OPTIONS(/wd4838) #narrowing conversion
    ADD_COMPILE_OPTIONS(/wd4996) #function or variable may be unsafe
    ADD_DEFINITIONS("-D_CRT_SECURE_NO_WARNINGS")
    ADD_DEFINITIONS("-D_WINSOCK_DEPRECATED_NO_WARNINGS")
ELSE()
    ADD_COMPILE_OPTIONS(-Wno-unused-value)
    ADD_COMPILE_OPTIONS(-Wno-write-strings)
ENDIF()

IF(NOT CMAKE_SYSTEM_NAME MATCHES "Windows")
    ADD_COMPILE_OPTIONS(-pthread)
ENDIF()

LINK_DIRECTORIES(libs)
LINK_LIBRARIES(a_dynamic_library)

FILE(GLOB SRC_TEST "test_types.cpp" "test_*.cpp")
ADD_EXECUTABLE(a.out ${SRC_TEST})

IF(NOT CMAKE_SYSTEM_NAME MATCHES "Windows")
    TARGET_LINK_LIBRARIES(a.out pthread)
ENDIF()

IF(CYGWIN OR MINGW)
    TARGET_LINK_LIBRARIES(a.out Ws2_32 Shlwapi Dbghelp)
ENDIF()

IF(CMAKE_SYSTEM_NAME MATCHES "Darwin")
    ADD_CUSTOM_TARGET(fixup ALL
        COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/../h2fix.sh a.out
        DEPENDS a.out
    )
ENDIF()
